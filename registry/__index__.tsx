/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from 'react';
import accordionRegistry from './registries/accordion';

export const Index: Record<string, any> = {
  index: {
    name: 'index',
    description: '',
    type: 'registry:style',
    registryDependencies: ['utils'],
    files: [],
    component: null,
    categories: undefined,
    meta: undefined,
  },
  ...accordionRegistry,
  button: {
    name: 'button',
    description: '',
    type: 'registry:ui',
    registryDependencies: undefined,
    files: [
      {
        path: 'registry/ui/button.tsx',
        type: 'registry:ui',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/components/ui/button');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-demo': {
    name: 'button-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-demo.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-secondary': {
    name: 'button-secondary',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-secondary.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-secondary.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-destructive': {
    name: 'button-destructive',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-destructive.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-destructive.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-outline': {
    name: 'button-outline',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-outline.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-outline.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-ghost': {
    name: 'button-ghost',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-ghost.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-ghost.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-link': {
    name: 'button-link',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-link.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-link.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-with-icon': {
    name: 'button-with-icon',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-with-icon.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-with-icon.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-loading': {
    name: 'button-loading',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-loading.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-loading.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-icon': {
    name: 'button-icon',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-icon.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-icon.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  'button-as-child': {
    name: 'button-as-child',
    description: '',
    type: 'registry:example',
    registryDependencies: ['button'],
    files: [
      {
        path: 'registry/examples/button-as-child.tsx',
        type: 'registry:example',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/examples/button-as-child.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
};
